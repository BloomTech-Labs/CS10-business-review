'use strict';

var _commander = require('commander');

var _commander2 = _interopRequireDefault(_commander);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _elegantSpinner = require('elegant-spinner');

var _elegantSpinner2 = _interopRequireDefault(_elegantSpinner);

var _logUpdate = require('log-update');

var _logUpdate2 = _interopRequireDefault(_logUpdate);

var _variants = require('../../variants.json');

var _variants2 = _interopRequireDefault(_variants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('shelljs/global');

var frame = (0, _elegantSpinner2.default)();

_commander2.default.description('Create a MERN app in current directory!').option('-t, --target [name]', 'Initialize the project with a variant [mern-starter]', 'mern-starter').parse(process.argv);

if (!which('git')) {
    console.log(_chalk2.default.red('Sorry, this script requires git'));
    exit(1);
}

if (_commander2.default.args.length > 1) {
    console.log(_chalk2.default.red('Please give only one argument as a directory name!!!'));
    exit(1);
}

if (_commander2.default.args.length === 1) {
    if (test('-d', _commander2.default.args[0])) {
        console.log(_chalk2.default.red(_commander2.default.args[0] + ' directory already exits! Please choose some another name!!!'));
        exit(1);
    }

    mkdir('-p', _commander2.default.args[0]);
    cd(_commander2.default.args[0]);
}

// Check whether the given variant is available or not
var selectedVariant = _variants2.default.filter(function (variant) {
    return variant.name === _commander2.default.target;
})[0];
if (!selectedVariant) {
    console.log(_chalk2.default.red.bold(_commander2.default.variant + ' is not a valid MERN variant. Execute \'mern list\' to list available variants'));
    exit(1);
}

exec('git init');

var interval = setInterval(function () {
    (0, _logUpdate2.default)('Fetching the boilerplate...' + _chalk2.default.cyan.bold.dim(frame()));
}, 50);

// Pull the corresponding variant into the given folder
exec('git pull ' + selectedVariant.git + ' ' + selectedVariant['git-branch'], function (code) {
    clearInterval(interval);
    _logUpdate2.default.clear();
    if (code !== 0) {
        console.log(_chalk2.default.red.bold('Error! Try again'));
        exit(1);
    }
    // Install the dependencies
    console.log(_chalk2.default.green.bold('Installing dependencies for ' + _commander2.default.args[0] + ' in the background, please hold...'));
    exec('npm install');
    console.log(_chalk2.default.green.bold('Installing dependencies for ' + _commander2.default.args[0] + ' completed.....You are good to go!'));
});